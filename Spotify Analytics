# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

I made observations regarding the data and thought of the following questions I could find answers for in SQL.

1) What are the top 10 popular songs in the dataset?

SELECT artist_name, track_name, popularity
    FROM BIT_DB.Spotifydata
    GROUP BY track_name
    ORDER BY popularity DESC LIMIT 10;

2) Which song has the highest danceability score?

SELECT artist_name, track_name, MAX(danceability)
        FROM BIT_DB.Spotifydata
    GROUP BY artist_name
    ORDER BY MAX(danceability) DESC LIMIT 1;

3) What is the average energy level of the songs in the dataset?

SELECT AVG(energy) AS Average_Energy FROM BIT_DB.Spotifydata;

4) How many songs are in each key?

SELECT song_key, COUNT(*) as Number_of_songs
    FROM BIT_DB.Spotifydata
    GROUP BY song_key;

5) What is the average loudness of the songs in the dataset?

SELECT AVG(loudness) AS Average_Loudness FROM BIT_DB.Spotifydata;

6) Which mode (major or minor) is more common in the dataset?

SELECT song_mode, COUNT(*) AS Number_of_songs
    FROM BIT_DB.Spotifydata
    GROUP BY song_mode;

7) Which song has the highest speechiness score?

SELECT artist_name, track_name, MAX(speechiness) AS speechiness_level
    FROM BIT_DB.Spotifydata
    GROUP BY artist_name
    ORDER BY speechiness_level DESC LIMIT 1

8) What is the average acousticness level of the songs in the dataset?

SELECT AVG(acousticness) AS Average_Acousticness FROM BIT_DB.Spotifydata;

9) Which song has the highest instrumentalness score?

SELECT artist_name, track_name, MAX(instrumentalness) AS instrumental_level
    FROM BIT_DB.Spotifydata
    GROUP BY artist_name
    ORDER BY instrumental_level DESC LIMIT 1;

10) What is the average liveness level of the songs in the dataset?

SELECT AVG(liveness) AS Average_Liveness FROM BIT_DB.Spotifydata;

11) Which song has the highest valence score?

SELECT artist_name, track_name, MAX(valence) AS valence_level
    FROM BIT_DB.Spotifydata
    GROUP BY artist_name
    ORDER BY valence_level DESC LIMIT 1;

12) What is the average tempo of the songs in the dataset?

SELECT AVG(tempo) AS Average_Tempo FROM BIT_DB.Spotifydata;

13) What is the longest song in the dataset?

SELECT artist_name, track_name, MAX(duration_ms) AS Song_length
    FROM BIT_DB.Spotifydata
    GROUP BY artist_name
    ORDER BY Song_length DESC LIMIT 1;

14) How many songs are in each time signature?

SELECT time_signature, COUNT(*) AS Number_of_songs
    FROM BIT_DB.Spotifydata
    GROUP BY time_signature;
